function V = discont_huber_log_prior(estimate, gamma)
    diff_x1 = estimate - circshift(estimate, [0, 1]);  % Right neighbor
    diff_x2 = estimate - circshift(estimate, [0, -1]); % Left neighbor
    diff_y1 = estimate - circshift(estimate, [1, 0]);  % Down neighbor
    diff_y2 = estimate - circshift(estimate, [-1, 0]); % Up neighbor

    V = sum(gamma * abs(diff_x1) - gamma^2 * log(1 + abs(diff_x1)/gamma), "all") + ...
        sum(gamma * abs(diff_x2) - gamma^2 * log(1 + abs(diff_x2)/gamma), "all") + ...
        sum(gamma * abs(diff_y1) - gamma^2 * log(1 + abs(diff_y1)/gamma), "all") + ...
        sum(gamma * abs(diff_y2) - gamma^2 * log(1 + abs(diff_y2)/gamma), "all");
end

function fin = discont_huber()
