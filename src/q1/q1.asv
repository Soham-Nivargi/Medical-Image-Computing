data = load('../../data/assignmentImageDenoising_phantom.mat');
noiseless = data.imageNoiseless;
noisy = data.imageNoisy;

[rows,cols] = size(noisy);

noisy = noisy/max(noisy(:));
noiseless = noiseless/max(noiseless(:));

figure();
imshow(noiseless);
% saveas(gcf, '../../results/q1/noiseless2.png');
figure();
imshow(noisy);
% saveas(gcf, '../../results/q1/noisy2.png');

err_init = RRMSE(noisy, noiseless);

% Initialize
X_in = noisy;                       
alpha = 0.97;                      
gamma = 0.01*1.2;                      
prior_type = 'discontinuity';             
step_size = 0.01;

err_1 = RRMSE(X_in, noisy);

X_in = gradient_descent(alpha, gamma, step_size, prior_type, X_in, noisy, noiseless);

figure();
imshow(X_in);
saveas(gcf, '../../results/q1/discont_huber/denoised_discont_huber.png');

err = RRMSE(X_in, noiseless);
err_2 = RRMSE(X_in, noisy);










